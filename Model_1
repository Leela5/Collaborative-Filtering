{"paragraphs":[{"text":"%spark2.pyspark\n## 1. Build the recommendation model using Alternating Least Squares\n\ndata = sc.textFile('/user/maria_dev/CategoryWiseRec.csv')\n\ntype(data)","user":"anonymous","dateUpdated":"2018-07-30T23:39:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.rdd.RDD'>\n"}]},"apps":[],"jobName":"paragraph_1532796964766_-1787396006","id":"20180728-133016_1930486951","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-30T23:39:26+0000","dateFinished":"2018-07-30T23:39:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:25301"},{"text":"%spark2.pyspark\ndata.first()\n","user":"anonymous","dateUpdated":"2018-07-28T18:27:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'visitorid,categoryid,event'\n"}]},"apps":[],"jobName":"paragraph_1532802296137_-36490618","id":"20180728-182456_1120090020","dateCreated":"2018-07-28T18:24:56+0000","dateStarted":"2018-07-28T18:27:51+0000","dateFinished":"2018-07-28T18:27:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25302"},{"text":"%spark2.pyspark\nheader=data.first()","user":"anonymous","dateUpdated":"2018-07-30T23:39:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532802465507_-907163699","id":"20180728-182745_1791456577","dateCreated":"2018-07-28T18:27:45+0000","dateStarted":"2018-07-30T23:39:41+0000","dateFinished":"2018-07-30T23:39:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25303"},{"text":"%spark2.pyspark\n# Removing header from RDD data\n\ndataWithNoHeader = data.filter(lambda x: x!=header)\n\ndataWithNoHeader.first()\n","user":"anonymous","dateUpdated":"2018-07-30T23:39:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'1342555,707,1'\n"}]},"apps":[],"jobName":"paragraph_1532802344933_76903039","id":"20180728-182544_1177094087","dateCreated":"2018-07-28T18:25:44+0000","dateStarted":"2018-07-30T23:39:46+0000","dateFinished":"2018-07-30T23:39:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25304"},{"text":"%spark2.pyspark\nfrom pyspark.mllib.recommendation import ALS, MatrixFactorizationModel, Rating\n\nCatRating = dataWithNoHeader.map(lambda x: x.split(','))\\\n.map(lambda x: Rating(int(x[0]), int(x[1]), float(x[2])))\n\nCatRating.take(5)","user":"anonymous","dateUpdated":"2018-07-30T23:39:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Rating(user=1342555, product=707, rating=1.0), Rating(user=244210, product=242, rating=1.0), Rating(user=1229304, product=1660, rating=1.0), Rating(user=672853, product=342, rating=1.0), Rating(user=1056465, product=921, rating=1.0)]\n"}]},"apps":[],"jobName":"paragraph_1532802385916_535351873","id":"20180728-182625_259794363","dateCreated":"2018-07-28T18:26:25+0000","dateStarted":"2018-07-30T23:39:49+0000","dateFinished":"2018-07-30T23:39:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25305"},{"text":"%spark2.pyspark\ntype(CatRating)","user":"anonymous","dateUpdated":"2018-07-28T18:29:18+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.rdd.PipelinedRDD'>\n"}]},"apps":[],"jobName":"paragraph_1532802407379_1301787006","id":"20180728-182647_689880435","dateCreated":"2018-07-28T18:26:47+0000","dateStarted":"2018-07-28T18:29:18+0000","dateFinished":"2018-07-28T18:29:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25306"},{"text":"%spark2.pyspark\n# Splitting the CatRating data to apply ALS\n\n(training,test) = CatRating.randomSplit([0.8,0.2])","user":"anonymous","dateUpdated":"2018-07-30T23:40:08+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532802219419_-505053481","id":"20180728-182339_2027509200","dateCreated":"2018-07-28T18:23:39+0000","dateStarted":"2018-07-30T23:40:08+0000","dateFinished":"2018-07-30T23:40:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25307"},{"text":"%spark2.pyspark\ntraining.count()","user":"anonymous","dateUpdated":"2018-07-28T18:29:27+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1201883\n"}]},"apps":[],"jobName":"paragraph_1532797659323_-1816657180","id":"20180728-170739_1574419252","dateCreated":"2018-07-28T17:07:39+0000","dateStarted":"2018-07-28T18:29:27+0000","dateFinished":"2018-07-28T18:30:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25308"},{"text":"%spark2.pyspark\ntest.count()","user":"anonymous","dateUpdated":"2018-07-28T18:33:01+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"301073\n"}]},"apps":[],"jobName":"paragraph_1532796964766_-1787396006","id":"20180728-133038_694062908","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T18:33:01+0000","dateFinished":"2018-07-28T18:33:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25309"},{"text":"%spark2.pyspark\n# Call the ALS.train mehod to train the model\nfrom pyspark.mllib.recommendation import ALS, MatrixFactorizationModel, Rating\n\nrank = 5\nnumIterations = 5\nmodel = model = ALS.trainImplicit(training, rank, numIterations, alpha=0.01)","user":"anonymous","dateUpdated":"2018-07-30T23:40:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964766_-1787396006","id":"20180728-133050_232665932","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-30T23:40:13+0000","dateFinished":"2018-07-30T23:41:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25310"},{"text":"%spark2.pyspark\nmodel","user":"anonymous","dateUpdated":"2018-07-28T18:46:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.mllib.recommendation.MatrixFactorizationModel object at 0x7f6bcad1a850>\n"}]},"apps":[],"jobName":"paragraph_1532796964767_-1787780755","id":"20180728-133109_218922467","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T18:46:55+0000","dateFinished":"2018-07-28T18:46:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25311"},{"text":"%spark2.pyspark\n# Evaluate the model on training data\n\ntestdata = test.map(lambda r: (r[0],r[1]))\n\ntype(testdata)","user":"anonymous","dateUpdated":"2018-07-30T23:40:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.rdd.PipelinedRDD'>\n"}]},"apps":[],"jobName":"paragraph_1532796964767_-1787780755","id":"20180728-133133_2068628980","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-30T23:40:24+0000","dateFinished":"2018-07-30T23:41:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25312"},{"text":"%spark2.pyspark\ntestdata.take(5)","user":"anonymous","dateUpdated":"2018-07-28T18:47:06+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(1342555, 707), (1229304, 1660), (116702, 806), (604904, 1341), (248925, 746)]\n"}]},"apps":[],"jobName":"paragraph_1532796964767_-1787780755","id":"20180728-133147_522047473","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T18:47:06+0000","dateFinished":"2018-07-28T18:47:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25313"},{"text":"%spark2.pyspark\n# Making predictions\n\npred_ind = model.predict(248925, 746)\n\npred_ind","user":"anonymous","dateUpdated":"2018-07-28T18:50:07+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.005986103252579589\n"}]},"apps":[],"jobName":"paragraph_1532796964767_-1787780755","id":"20180728-133217_1157377500","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T18:50:07+0000","dateFinished":"2018-07-28T18:50:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25314"},{"text":"%spark2.pyspark\nmodel.predictAll(testdata).map(lambda r: ((r[0], r[1]),r[2])).take(5)\n","user":"anonymous","dateUpdated":"2018-07-30T23:41:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[((324206, 124), 0.0017039634454200144), ((1096820, 589), 0.012360612572317627), ((1302744, 1623), 0.009207829687003493), ((987102, 926), 0.011751570124852033), ((1087844, 1650), 0.0015208722875593179)]\n"}]},"apps":[],"jobName":"paragraph_1532796964768_-1802016464","id":"20180728-133243_720908994","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-30T23:41:21+0000","dateFinished":"2018-07-30T23:42:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25315"},{"text":"%spark2.pyspark\n# Recommend Products(category) For Users method to generate the top N item recommendations for users\nrecommendItemsToUsers = model.recommendProductsForUsers(10)","user":"anonymous","dateUpdated":"2018-07-28T19:22:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964768_-1802016464","id":"20180728-133259_549024954","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:03:03+0000","dateFinished":"2018-07-28T19:03:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25316"},{"text":"%spark2.pyspark\nrecommendItemsToUsers.take(1)","user":"anonymous","dateUpdated":"2018-07-28T19:03:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(185012, (Rating(user=185012, product=491, rating=0.04871482515216735), Rating(user=185012, product=1051, rating=0.028699492512778257), Rating(user=185012, product=48, rating=0.02862404496957833), Rating(user=185012, product=342, rating=0.019202382534929077), Rating(user=185012, product=1279, rating=0.019065606952296678), Rating(user=185012, product=683, rating=0.016388326487131587), Rating(user=185012, product=1483, rating=0.013969881764322206), Rating(user=185012, product=1173, rating=0.006706425900091805), Rating(user=185012, product=707, rating=0.005186738334121345), Rating(user=185012, product=242, rating=0.0030714082576446533)))]\n"}]},"apps":[],"jobName":"paragraph_1532804515543_1307007093","id":"20180728-190155_164105973","dateCreated":"2018-07-28T19:01:55+0000","dateStarted":"2018-07-28T19:03:06+0000","dateFinished":"2018-07-28T19:07:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25317"},{"text":"%spark2.pyspark\n#Category\n\nrecommendItemsToUsers.count()","user":"anonymous","dateUpdated":"2018-07-28T19:11:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1011340\n"}]},"apps":[],"jobName":"paragraph_1532796964784_-1795860482","id":"20180728-133319_381155180","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:11:49+0000","dateFinished":"2018-07-28T19:12:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25318"},{"text":"%spark2.pyspark\nrecommendUsersToItems = model.recommendUsersForProducts(10)","user":"anonymous","dateUpdated":"2018-07-30T23:44:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532994115580_-354429310","id":"20180730-234155_365783858","dateCreated":"2018-07-30T23:41:55+0000","dateStarted":"2018-07-30T23:44:03+0000","dateFinished":"2018-07-30T23:44:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25319"},{"text":"%spark2.pyspark\nrecommendUsersToItems.take(1)","user":"anonymous","dateUpdated":"2018-07-30T23:44:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(692, (Rating(user=1150086, product=692, rating=3.815991179675704e-06), Rating(user=152963, product=692, rating=3.602256942357526e-06), Rating(user=530559, product=692, rating=3.520049637823572e-06), Rating(user=76757, product=692, rating=3.3283541941733388e-06), Rating(user=247235, product=692, rating=3.2208352348381957e-06), Rating(user=684514, product=692, rating=3.163277380057813e-06), Rating(user=286616, product=692, rating=2.986332752841223e-06), Rating(user=163561, product=692, rating=2.9641948204477643e-06), Rating(user=138131, product=692, rating=2.931711763002885e-06), Rating(user=757355, product=692, rating=2.9176650252686586e-06)))]\n"}]},"apps":[],"jobName":"paragraph_1532994172761_-2088215123","id":"20180730-234252_1951189491","dateCreated":"2018-07-30T23:42:52+0000","dateStarted":"2018-07-30T23:44:06+0000","dateFinished":"2018-07-30T23:45:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25320"},{"text":"%spark2.pyspark\nproductFeatures = model.productFeatures().collect()\n\nproductFeatures_1 = sqlContext.createDataFrame(productFeatures)","user":"anonymous","dateUpdated":"2018-07-28T19:23:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532805264900_-1076842897","id":"20180728-191424_970632535","dateCreated":"2018-07-28T19:14:24+0000","dateStarted":"2018-07-28T19:23:04+0000","dateFinished":"2018-07-28T19:23:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25321"},{"text":"%spark2.pyspark\nproductFeatures_1.show(3)","user":"anonymous","dateUpdated":"2018-07-28T19:23:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+\n| _1|                  _2|\n+---+--------------------+\n|  0|[-0.0064263292588...|\n|  4|[-0.0041954130865...|\n|  6|[-3.2375278533436...|\n+---+--------------------+\nonly showing top 3 rows\n\n"}]},"apps":[],"jobName":"paragraph_1532805790816_16948964","id":"20180728-192310_1191605882","dateCreated":"2018-07-28T19:23:10+0000","dateStarted":"2018-07-28T19:23:32+0000","dateFinished":"2018-07-28T19:23:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25322"},{"text":"%spark2.pyspark\nfirst_product = model.productFeatures().take(1)[0]\nlatents = first_product[1]\nlen(latents)","user":"anonymous","dateUpdated":"2018-07-28T19:27:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5\n"}]},"apps":[],"jobName":"paragraph_1532805958884_-1200519149","id":"20180728-192558_2012236552","dateCreated":"2018-07-28T19:25:58+0000","dateStarted":"2018-07-28T19:27:01+0000","dateFinished":"2018-07-28T19:27:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25323"},{"text":"%spark2.pyspark\nuserFeatures = model.userFeatures().collect()\n\nuserFeatures_1 = sqlContext.createDataFrame(userFeatures)","user":"anonymous","dateUpdated":"2018-07-28T19:28:50+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532806078227_1315874930","id":"20180728-192758_603791962","dateCreated":"2018-07-28T19:27:58+0000","dateStarted":"2018-07-28T19:28:50+0000","dateFinished":"2018-07-28T19:30:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25324"},{"text":"%spark2.pyspark\nuserFeatures_1.show(2)","user":"anonymous","dateUpdated":"2018-07-28T19:31:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------------+\n| _1|                  _2|\n+---+--------------------+\n|  0|[-0.0089762806892...|\n|  2|[-0.0013274035882...|\n+---+--------------------+\nonly showing top 2 rows\n\n"}]},"apps":[],"jobName":"paragraph_1532806075412_624481157","id":"20180728-192755_1687063107","dateCreated":"2018-07-28T19:27:55+0000","dateStarted":"2018-07-28T19:31:04+0000","dateFinished":"2018-07-28T19:31:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25325"},{"text":"%spark2.pyspark\nfirst_user = model.userFeatures().take(1)[0]\nlatents = first_user[1]\nlen(latents)","user":"anonymous","dateUpdated":"2018-07-28T19:32:10+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5\n"}]},"apps":[],"jobName":"paragraph_1532806072389_199333622","id":"20180728-192752_132824991","dateCreated":"2018-07-28T19:27:52+0000","dateStarted":"2018-07-28T19:32:10+0000","dateFinished":"2018-07-28T19:32:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25326"},{"text":"%spark2.pyspark\n# Calculate rmse\nfrom math import sqrt\npredictions = model.predictAll(testdata).map(lambda r: ((r[0], r[1]), r[2]))","user":"anonymous","dateUpdated":"2018-07-28T19:36:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532806482008_-117697303","id":"20180728-193442_950323640","dateCreated":"2018-07-28T19:34:42+0000","dateStarted":"2018-07-28T19:35:49+0000","dateFinished":"2018-07-28T19:36:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25327"},{"text":"%spark2.pyspark\nratesAndPreds = CatRating.map(lambda r: ((r[0],r[1]), r[2])).join(predictions)","user":"anonymous","dateUpdated":"2018-07-28T19:36:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964784_-1795860482","id":"20180728-133411_306425298","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:36:42+0000","dateFinished":"2018-07-28T19:36:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25328"},{"text":"%spark2.pyspark\nratesAndPreds.take(5)","user":"anonymous","dateUpdated":"2018-07-28T19:36:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[((1325500, 154), (1.0, 0.0003349065846972463)), ((804836, 1450), (1.0, 1.1383323696916125e-05)), ((804836, 1450), (1.0, 1.1383323696916125e-05)), ((804836, 1450), (3.0, 1.1383323696916125e-05)), ((804836, 1450), (3.0, 1.1383323696916125e-05))]\n"}]},"apps":[],"jobName":"paragraph_1532796964784_-1795860482","id":"20180728-133426_1467974890","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:36:46+0000","dateFinished":"2018-07-28T19:38:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25329"},{"text":"%spark2.pyspark\nMSE = ratesAndPreds.map(lambda r: (r[1][0]-r[1][1])**2).mean()\n\nprint(\"MeanSquareError = \" + str(MSE))","user":"anonymous","dateUpdated":"2018-07-28T19:41:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"MeanSquareError = 2.18612432379\n"}]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133416_883081221","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:41:56+0000","dateFinished":"2018-07-28T19:42:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25330"},{"text":"%spark2.pyspark\n# Root Mean Square Error\n\nrmse = sqrt(MSE)\n\nprint(\"Root_Mean_Square_Error = \" + str(rmse))\n","user":"anonymous","dateUpdated":"2018-07-28T19:42:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Root_Mean_Square_Error = 1.47855480919\n"}]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133508_725341089","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:42:26+0000","dateFinished":"2018-07-28T19:42:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25331"},{"text":"%spark2.pyspark\n# 2.  Model Evluation and Selection with Hyper Parameter Tuning\n\ndf = sqlContext.createDataFrame(CatRating)\n\ntype(df)","user":"anonymous","dateUpdated":"2018-07-28T19:43:38+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133504_547184969","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:43:38+0000","dateFinished":"2018-07-28T19:43:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25332"},{"text":"%spark2.pyspark\ndf.show(5)","user":"anonymous","dateUpdated":"2018-07-28T19:44:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-------+------+\n|   user|product|rating|\n+-------+-------+------+\n|1342555|    707|   1.0|\n| 244210|    242|   1.0|\n|1229304|   1660|   1.0|\n| 672853|    342|   1.0|\n|1056465|    921|   1.0|\n+-------+-------+------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133500_796762287","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:44:47+0000","dateFinished":"2018-07-28T19:44:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25333"},{"text":"%spark2.pyspark\n# Split the input data into training and test datasets\n\n(training, test) = df.randomSplit([0.8,0.2])","user":"anonymous","dateUpdated":"2018-07-28T19:44:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133456_1779974089","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:44:56+0000","dateFinished":"2018-07-28T19:44:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25334"},{"text":"%spark2.pyspark\n# Apply implicit parameter to the data\n\nfrom pyspark.ml.recommendation import ALS\n\nals = ALS(implicitPrefs=True, userCol=\"user\", itemCol=\"product\", ratingCol=\"rating\", coldStartStrategy=\"drop\")\n\nals","user":"anonymous","dateUpdated":"2018-07-28T19:45:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ALS_4fdeaff285b75ff8d702\n"}]},"apps":[],"jobName":"paragraph_1532796964785_-1796245231","id":"20180728-133604_246414466","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:45:04+0000","dateFinished":"2018-07-28T19:45:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25335"},{"text":"%spark2.pyspark\nals.explainParams()\n","user":"anonymous","dateUpdated":"2018-07-28T19:45:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\"alpha: alpha for implicit preference (default: 1.0)\\ncheckpointInterval: set checkpoint interval (>= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the SparkContext. (default: 10)\\ncoldStartStrategy: strategy for dealing with unknown or new users/items at prediction time. This may be useful in cross-validation or production scenarios, for handling user/item ids the model has not seen in the training data. Supported values: 'nan', 'drop'. (default: nan, current: drop)\\nfinalStorageLevel: StorageLevel for ALS model factors. (default: MEMORY_AND_DISK)\\nimplicitPrefs: whether to use implicit preference (default: False, current: True)\\nintermediateStorageLevel: StorageLevel for intermediate datasets. Cannot be 'NONE'. (default: MEMORY_AND_DISK)\\nitemCol: column name for item ids. Ids must be within the integer value range. (default: item, current: product)\\nmaxIter: max number of iterations (>= 0). (default: 10)\\nnonnegative: whether to use nonnegative constraint for least squares (default: False)\\nnumItemBlocks: number of item blocks (default: 10)\\nnumUserBlocks: number of user blocks (default: 10)\\npredictionCol: prediction column name. (default: prediction)\\nrank: rank of the factorization (default: 10)\\nratingCol: column name for ratings (default: rating, current: rating)\\nregParam: regularization parameter (>= 0). (default: 0.1)\\nseed: random seed. (default: 593367982098446717)\\nuserCol: column name for user ids. Ids must be within the integer value range. (default: user, current: user)\"\n"}]},"apps":[],"jobName":"paragraph_1532796964786_-1795090984","id":"20180728-133600_1820627954","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:45:12+0000","dateFinished":"2018-07-28T19:45:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25336"},{"text":"%spark2.pyspark\nfrom pyspark.ml import Pipeline\n\npipeline = Pipeline(stages=[als])\n","user":"anonymous","dateUpdated":"2018-07-28T19:46:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964786_-1795090984","id":"20180728-133557_104688551","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:46:20+0000","dateFinished":"2018-07-28T19:46:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25337"},{"text":"%spark2.pyspark\n# Set the params\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\n\nparamImplicit = ParamGridBuilder()\\\n.addGrid(als.rank,[5,10])\\\n.addGrid(als.maxIter,[5,10])\\\n.addGrid(als.regParam,[1.0,5.0])\\\n.build()","user":"anonymous","dateUpdated":"2018-07-28T19:46:28+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964786_-1795090984","id":"20180728-133553_1101518539","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:46:28+0000","dateFinished":"2018-07-28T19:46:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25338"},{"text":"%spark2.pyspark\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\nevaluatoR = RegressionEvaluator(metricName='rmse', labelCol='rating')","user":"anonymous","dateUpdated":"2018-07-28T19:46:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964786_-1795090984","id":"20180728-133741_1067667844","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:46:35+0000","dateFinished":"2018-07-28T19:46:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25339"},{"text":"%spark2.pyspark\n# Fit the estimator using params\n\ncvImplicit = CrossValidator(estimator=als, estimatorParamMaps=paramImplicit, evaluator=evaluatoR, numFolds=3)\n","user":"anonymous","dateUpdated":"2018-07-28T19:46:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964786_-1795090984","id":"20180728-133738_1471660694","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:46:39+0000","dateFinished":"2018-07-28T19:46:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25340"},{"text":"%spark2.pyspark\ncvModel = cvImplicit.fit(training)","user":"anonymous","dateUpdated":"2018-07-28T19:46:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964787_-1795475733","id":"20180728-133736_1765504177","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T19:46:46+0000","dateFinished":"2018-07-28T20:28:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25341"},{"text":"%spark2.pyspark\n# Fit the model\n\n# Select the model produced by the best performance set of params\n\npreds = cvModel.bestModel.transform(test)\n","user":"anonymous","dateUpdated":"2018-07-28T20:35:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964787_-1795475733","id":"20180728-133821_14423007","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T20:35:12+0000","dateFinished":"2018-07-28T20:35:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25342"},{"text":"%spark2.pyspark\nevaluator = RegressionEvaluator(metricName='rmse', labelCol='rating', predictionCol='prediction')","user":"anonymous","dateUpdated":"2018-07-28T20:35:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532796964787_-1795475733","id":"20180728-133826_520352198","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T20:35:18+0000","dateFinished":"2018-07-28T20:35:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25343"},{"text":"%spark2.pyspark\n# Find Root Mean Square Error\n\nrmse = evaluator.evaluate(preds)\n\nprint(\"Root_mean_square_error = \" + str(rmse))","user":"anonymous","dateUpdated":"2018-07-28T20:37:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Root_mean_square_error = 1.29930373737\n"}]},"apps":[],"jobName":"paragraph_1532796964787_-1795475733","id":"20180728-133854_1963445329","dateCreated":"2018-07-28T16:56:04+0000","dateStarted":"2018-07-28T20:37:01+0000","dateFinished":"2018-07-28T20:38:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25344"},{"text":"%spark2.pyspark\n","user":"anonymous","dateUpdated":"2018-07-28T20:35:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1532810124123_1515368021","id":"20180728-203524_782834065","dateCreated":"2018-07-28T20:35:24+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:25345"}],"name":"CategoryWiseRecs Model and Tuning","id":"2DN7FZEPC","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
